类型            最小尺寸
bool            未定义
char            8位
wchar_t         16位
char16_t        16位
char32_t        32位
short           16位
int             16位
long            32位
long long       64位
float           6位有效数字
double          10位有效数字
long double     10位有效数字

/** 
  * byte 8 bits -128 - + 127 
  * 1 bit = 1 二进制数据 
  * 1 byte = 8 bit 
  * 1 字母 = 1 byte = 8 bit(位) 
  * 1 汉字 = 2 byte = 16 bit 
  */ 
1、计算机存储信息的最小单位，称之为位（bit），音译比特，二进制的一个“0”或一个“1”叫一位。 
2、计算机存储容量基本单位是字节（Byte），音译为拜特，8个二进制位组成1个字节，一个标准英文字母占一个字节位置，一个标准汉字占二个字节位置。 

signed带符号的  unsigned不带符号的
int,short,long,long long都是带符号的,在前面加unsigned得到无符号类型.unsigned int可以缩写成unsigned.
字符型分为三种:char, signed char, unsigned char.char和signed char不一样,尽管有三种,但是表现形式只有两种(有符号,无符号),具体哪种由编译器决定.

练习2.1:
早期的操作系统是16位系统， 
int用二字节表示，范围是-32768~32767； 
long用4字节表示，范围是-2147483648~2147483647。
后来发展到32位操作系统， 
int 用4字节表示，与long相同。
目前的操作系统已发展到64位操作系统，但因程序编译工艺的不同，两者表现出不同的差别： 
32位编译系统：int占四字节，与long相同。 
64位编译系统：int占四字节，long占8字节，long数据范围变为：-2^63~2^63-1

bool b = 42;    //b为真
int i = b;      //i = 1
int i = 3.14;   //i=3
double pi = i;  //pi=3.0
unsigned char c = -1;   //假设char占8bit,c的值为255.
给无符号类型赋值超出范围时,结果是初始值对无符号类型表示数值总数取模后的余数.

取模:
对于整型数a，b来说，取模运算或者求余运算的方法都是：
1.求 整数商： c = a/b;
2.计算模或者余数： r = a - c*b.
求模运算和求余运算在第一步不同: 取余运算在取c的值时，向0 方向舍入(fix()函数)；而取模运算在计算c的值时，向负无穷方向舍入(floor()函数)。
例如：计算-7 Mod 4
那么：a = -7；b = 4；
第一步：求整数商c，如进行求模运算c = -2（向负无穷方向舍入），求余c = -1（向0方向舍入）；
第二步：计算模和余数的公式相同，但因c的值不同，求模时r = 1，求余时r = -3。
归纳：当a和b符号一致时，求模运算和求余运算所得的c的值一致，因此结果一致。
当符号不一致时，结果不一样。求模运算结果的符号和b一致，求余运算结果的符号和a一致。
另外各个环境下%运算符的含义不同，比如c/c++，java 为取余，而python则为取模。

signed char c2 = 256;  //假设char占8bit,c2的值是未定义的.当给带符号类型赋值超出范围的值时,结果是未定义的.

int i = 42;
if (i)
    i = 0;
// i == 0为false i != 0 为true.

unsigned  u = 10;
int i = -42;
i + i = -84;
u + i //如果int占32位则输出4294967264 = 2^32 - 42 +10
把整数-42转换无符号数.把负数转换成无符号数类似于直接给无符号数赋一个负值,结果等于这个负数加上无符号数的模.

********************************************************************************************************
0开头代表8进制
0x开头代表16进制
''单括号 char型
"" 双括号字符串类型
字符串实际上是由字符构成的数组
*编译器在每个字符串结尾加一个空字符('\0') 因此字符串的字面值的实际长度要比它的内容多1:
'A'表示字符A
"A"表示一个数组,包含两个字符:A和空字符.

转义序列:
换行符         \n      横向制表符       \t           报警(响铃)符   \a
纵向制表符     \v      退格符           \b           双引号         \"
反斜线         \\      问号            \?           单引号          \'
回车符         /r      进纸符          \f

转义序列符被当做一个字符使用
